<?php
/**
 * @file
 *   persona.module
 */

/**
 * Implements hook_menu().
 */
function persona_menu() {
  $items['persona/verify'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'persona_verify',
    'access callback' => TRUE,
  );
  $items['admin/config/people/persona'] = array(
    'title' => 'Persona Settings',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('persona_admin_form'),
    'description' => 'Configure settings for Mozilla Persona.',
    'file' => 'persona.admin.inc',
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Implements hook_preprocess_page().
 * Add the Mozilla Persona js to the page.
 */
function persona_preprocess_page(&$vars) {
  global $user;
  $user_mail = (!$user->uid) ? NULL : $user->mail;
  drupal_add_js("https://login.persona.org/include.js", "external");
  drupal_add_js(array('persona' => array('user' => array('mail' => $user_mail))), "setting");
}

/**
 * Implements hook_form_alter().
 */
function persona_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case "user_login":
      if (!variable_get('persona_login_display')) {
        break;
      }
      $form['persona']['#markup'] = persona_link();
      break;
    case "user_login_block":
      if (!variable_get('persona_login_block_display')) {
        break;
      }
      $form['persona']['#markup'] = persona_link();
      break;
    case "user_register_form":
      if (!variable_get('persona_register_display')) {
        break;
      }
      $persona_link = array(
        '#markup' => persona_link('register'),
      );
      $form['account']['persona'] = $persona_link;
      break;
  }
}

/**
 * Callback function to validate the persona assertion.
 */
function persona_verify() {
  global $base_url;
  if (isset($_POST['assertion'])) {
    $assertion = check_plain($_POST['assertion']);
  }
  else {
    return MENU_ACCESS_DENIED;
  }
  // Verify the assertion via the persona API.
  $result = drupal_http_request("https://verifier.login.persona.org/verify", array(
    "method" => "POST",
    'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
    "data" => "assertion=$assertion&audience=$base_url",
    ));
  if ($result->code !== "200") {
    return MENU_ACCESS_DENIED;
  }
  $response = (object) drupal_json_decode($result->data);
  // Response should have a status of "okay".
  if ($response->status !== 'okay') {
    return MENU_ACCESS_DENIED;
  }
  // Check to see if this user already exists.
  $account = user_load_by_mail($response->email);
  if (empty($account)) {
    // Need to create an account for this user.
    $fields = array(
      'name' => $response->email,
      'mail' => $response->email,
      'pass' => user_password(),
      'status' => 1,
      'init' => 'email address',
      'roles' => array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
      ),
    );
    $account = user_save(array(), $fields);
  }
  else {
    if ($account->status != 1) {
      return MENU_ACCESS_DENIED;
    }
  }
  // Login the user.
  user_login_submit(array(), $form_state['uid'] = $account->uid);
  drupal_exit();
}

/**
 * Returns a Persona login or registration link.
 * @param $type
 *   Should be 'login' or 'register'.
 */
function persona_link($type = 'login') {
  $classes = "persona-login ";
  switch (variable_get("persona_{$type}_button_style")) {
    case "dark":
      $classes .= "dark ";
      $classes .= "persona-button ";
      break;
    case "blue":
      $classes .= "persona-button ";
      break;
    case "orange":
      $classes .= "orange ";
      $classes .= "persona-button ";
      break;
  }
  return '<a href="#" class="' . $classes . '"><span>' . variable_get("persona_{$type}_button_text") . '</span></a>';
}
